//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("SERVER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  INVITED
  VERIFIED
}

/// @@auth
/// @@allow('all', auth().id == this.id)
/// @@allow('all', auth().globalRole == 'ADMIN')
/// @@allow('create', globalRole != 'ADMIN')
/// @@allow('read', true)
model User {
  id              String        @id() @default(uuid())
  name            String?
  email           String?       @unique()
  pictureUrl      String?       @default("https://i.imgur.com/ZdJSK3Y.jpeg")
  tokenInvitation String?
  status          UserStatus    @default(VERIFIED)
  globalRole      String        @default("USER")
  /// @password
  /// @omit
  password        String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now()) @updatedAt()
  bookings        Booking[]     @relation("user")
  testimonials    Testimonial[] @relation("user")
}

/// @@allow('all', true)
model Service {
  id              String           @id() @default(uuid())
  name            String?
  description     String?
  duration        Float?
  technique       String?
  price           String?
  category        String?
  bookingServices BookingService[] @relation("service")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt()
}

/// @@allow('all', true)
model GalleryImage {
  id         String   @id() @default(uuid())
  imageUrl   String?
  style      String?
  color      String?
  designType String?
  caption    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Faq {
  id        String   @id() @default(uuid())
  question  String?
  answer    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model ContactMessage {
  id        String   @id() @default(uuid())
  name      String?
  email     String?
  phone     String?
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Booking {
  id                String           @id() @default(uuid())
  date              String?
  timeSlot          String?
  status            String?
  contactDetails    String?
  optInNotification Boolean?
  userId            String?
  user              User?            @relation(fields: [userId], references: [id], name: "user")
  bookingServices   BookingService[] @relation("booking")
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Testimonial {
  id        String   @id() @default(uuid())
  content   String?
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model BookingService {
  id        String   @id() @default(uuid())
  bookingId String?
  booking   Booking? @relation(fields: [bookingId], references: [id], name: "booking")
  serviceId String?
  service   Service? @relation(fields: [serviceId], references: [id], name: "service")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}
