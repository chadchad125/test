enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id              String        @id @default(uuid())
    name            String?
    email           String?       @unique
    pictureUrl      String?       @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation String?

    status          UserStatus    @default(VERIFIED)

    // this is the role of the user for the application
    globalRole      String        @default('USER')
    password        String?       @password @omit
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt @default(now())

    bookings        Booking[]     @relation("user")
    testimonials    Testimonial[] @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Service {

    id              String           @id @default(uuid())
    name            String?
    description     String?
    duration        Float?
    technique       String?
    price           String?
    category        String?

    bookingServices BookingService[] @relation("service")
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt @default(now())
    @@allow("all", true)
}

model GalleryImage {

    id         String   @id @default(uuid())
    imageUrl   String?
    style      String?
    color      String?
    designType String?
    caption    String?

    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Faq {

    id        String   @id @default(uuid())
    question  String?
    answer    String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model ContactMessage {

    id        String   @id @default(uuid())
    name      String?
    email     String?
    phone     String?
    message   String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Booking {

    id                String           @id @default(uuid())
    date              String?
    timeSlot          String?
    status            String?
    contactDetails    String?
    optInNotification Boolean?

    userId            String?
    user              User?            @relation(fields: [userId], references: [id], name: "user")

    bookingServices   BookingService[] @relation("booking")
    createdAt         DateTime         @default(now())
    updatedAt         DateTime         @updatedAt @default(now())
    @@allow("all", true)
}

model Testimonial {

    id        String   @id @default(uuid())
    content   String?

    userId    String?
    user      User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model BookingService {

    id        String   @id @default(uuid())

    bookingId String?
    booking   Booking? @relation(fields: [bookingId], references: [id], name: "booking")
    serviceId String?
    service   Service? @relation(fields: [serviceId], references: [id], name: "service")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

